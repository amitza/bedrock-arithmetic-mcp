services:
  mcp-server:
    build:
      context: src/server
      dockerfile: Dockerfile
    container_name: arithmetic-mcp-server
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - mcp-network
    restart: unless-stopped

  mcp-client:
    build:
      context: src/client
      dockerfile: Dockerfile
    container_name: bedrock-mcp-client
    environment:
      - MCP_SERVER_URL=http://mcp-server:8000/mcp/
      - AWS_REGION=${AWS_REGION:-us-west-2}
      - BEDROCK_MODEL_ID=${BEDROCK_MODEL_ID:-us.anthropic.claude-3-7-sonnet-20250219-v1:0}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}
    ports:
      - "8001:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    depends_on:
      mcp-server:
        condition: service_healthy
    networks:
      - mcp-network
    restart: unless-stopped

networks:
  mcp-network:
    driver: bridge
    name: mcp-network
